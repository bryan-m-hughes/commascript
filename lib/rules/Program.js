"use strict";
var $___46__46__47_node__,
    $___46__46__47_state__;
var $__0 = ($___46__46__47_node__ = require("../node"), $___46__46__47_node__ && $___46__46__47_node__.__esModule && $___46__46__47_node__ || {default: $___46__46__47_node__}),
    registerNodeProcessor = $__0.registerNodeProcessor,
    isCommaScriptDirective = $__0.isCommaScriptDirective,
    processBlock = $__0.processBlock;
var $__1 = ($___46__46__47_state__ = require("../state"), $___46__46__47_state__ && $___46__46__47_state__.__esModule && $___46__46__47_state__ || {default: $___46__46__47_state__}),
    enterContext = $__1.enterContext,
    exitContext = $__1.exitContext,
    enterState = $__1.enterState,
    exitState = $__1.exitState,
    states = $__1.states;
registerNodeProcessor({
  name: 'Program',
  parseStatement: function(node) {
    processBlock(node);
  },
  scan: function(node) {
    if (isCommaScriptDirective(node.body[0])) {
      enterState(states.PARSING_STATEMENT);
      enterContext({expectedReturnType: null});
      processBlock(node.body);
      exitContext();
      exitState();
    } else {
      processBlock(node.body);
    }
    return {result: 'normal'};
  }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGVzL1Byb2dyYW0uanMiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QkE7OztTQ3hCQSxFQUFDLHVCQUFvQixDQUFBLE9BQU0sQUFBQyxXQUFrQixDQUN0QyxDQUFBLHdCQUFxQixpQ0FBMkIsQ0FBQSx3QkFBcUIsR0FBSyxFQUFDLE9BQU0sdUJBQW1CLENBRDlELEFBQytELENBQUM7QUR1QnJHLHdCQUFvQjtBQUFHLHlCQUFxQjtBQUFHLGVBQVc7U0N4Qm5FLEVBQUMsd0JBQW9CLENBQUEsT0FBTSxBQUFDLFlBQWtCLENBQ3RDLENBQUEseUJBQXFCLGtDQUEyQixDQUFBLHlCQUFxQixHQUFLLEVBQUMsT0FBTSx3QkFBbUIsQ0FEOUQsQUFDK0QsQ0FBQztBRHdCckcsZUFBVztBQUFHLGNBQVU7QUFBRyxhQUFTO0FBQUcsWUFBUTtBQUFHLFNBQUs7QUFFaEUsb0JBQW9CLEFBQUMsQ0FBQztBQUVwQixLQUFHLENBQUcsVUFBUTtBQUVkLGVBQWEsQ0FBYixVQUFlLElBQUcsQ0FBRztBQUNuQixlQUFXLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztFQUNwQjtBQUVBLEtBQUcsQ0FBSCxVQUFLLElBQUcsQ0FBRztBQUNULE9BQUksc0JBQXFCLEFBQUMsQ0FBQyxJQUFHLEtBQUssQ0FBRSxDQUFBLENBQUMsQ0FBQyxDQUFHO0FBQ3hDLGVBQVMsQUFBQyxDQUFDLE1BQUssa0JBQWtCLENBQUMsQ0FBQztBQUNwQyxpQkFBVyxBQUFDLENBQUMsQ0FDWCxrQkFBaUIsQ0FBRyxLQUFHLENBQ3pCLENBQUMsQ0FBQztBQUVGLGlCQUFXLEFBQUMsQ0FBQyxJQUFHLEtBQUssQ0FBQyxDQUFDO0FBRXZCLGdCQUFVLEFBQUMsRUFBQyxDQUFDO0FBQ2IsY0FBUSxBQUFDLEVBQUMsQ0FBQztJQUNiLEtBQU87QUFDTCxpQkFBVyxBQUFDLENBQUMsSUFBRyxLQUFLLENBQUMsQ0FBQztJQUN6QjtBQUFBLEFBQ0EsU0FBTyxFQUNMLE1BQUssQ0FBRyxTQUFPLENBQ2pCLENBQUM7RUFDSDtBQUFBLEFBRUYsQ0FBQyxDQUFDO0FBQ0YiLCJmaWxlIjoicnVsZXMvUHJvZ3JhbS5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGUgTUlUIExpY2Vuc2UgKE1JVClcblxuQ29weXJpZ2h0IChjKSAyMDEzLTIwMTQgQnJ5YW4gSHVnaGVzIDxicnlhbkB0aGVvcmV0aWNhbGlkZWF0aW9ucy5jb20+IChodHRwOi8vdGhlb3JldGljYWxpZGVhdGlvbnMuY29tKVxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG4qL1xuXG5pbXBvcnQgeyByZWdpc3Rlck5vZGVQcm9jZXNzb3IsIGlzQ29tbWFTY3JpcHREaXJlY3RpdmUsIHByb2Nlc3NCbG9jayB9IGZyb20gJy4uL25vZGUnO1xuaW1wb3J0IHsgZW50ZXJDb250ZXh0LCBleGl0Q29udGV4dCwgZW50ZXJTdGF0ZSwgZXhpdFN0YXRlLCBzdGF0ZXMgfSBmcm9tICcuLi9zdGF0ZSc7XG5cbnJlZ2lzdGVyTm9kZVByb2Nlc3Nvcih7XG5cbiAgbmFtZTogJ1Byb2dyYW0nLFxuXG4gIHBhcnNlU3RhdGVtZW50KG5vZGUpIHtcbiAgICBwcm9jZXNzQmxvY2sobm9kZSk7XG4gIH0sXG5cbiAgc2Nhbihub2RlKSB7XG4gICAgaWYgKGlzQ29tbWFTY3JpcHREaXJlY3RpdmUobm9kZS5ib2R5WzBdKSkge1xuICAgICAgZW50ZXJTdGF0ZShzdGF0ZXMuUEFSU0lOR19TVEFURU1FTlQpO1xuICAgICAgZW50ZXJDb250ZXh0KHtcbiAgICAgICAgZXhwZWN0ZWRSZXR1cm5UeXBlOiBudWxsXG4gICAgICB9KTtcblxuICAgICAgcHJvY2Vzc0Jsb2NrKG5vZGUuYm9keSk7XG5cbiAgICAgIGV4aXRDb250ZXh0KCk7XG4gICAgICBleGl0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvY2Vzc0Jsb2NrKG5vZGUuYm9keSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICByZXN1bHQ6ICdub3JtYWwnXG4gICAgfTtcbiAgfVxuXG59KTtcbiIsIigkX19wbGFjZWhvbGRlcl9fMCA9IHJlcXVpcmUoJF9fcGxhY2Vob2xkZXJfXzEpLCBcbiAgICAgICAgJF9fcGxhY2Vob2xkZXJfXzIgJiYgJF9fcGxhY2Vob2xkZXJfXzMuX19lc01vZHVsZSAmJiAkX19wbGFjZWhvbGRlcl9fNCB8fCB7ZGVmYXVsdDogJF9fcGxhY2Vob2xkZXJfXzV9KSJdfQ==